# -----------------------------------------------------------------------------
# 1) Базовый образ с Python 3.11
# -----------------------------------------------------------------------------
FROM python:3.11-slim

# -----------------------------------------------------------------------------
# 2) Переключаемся в рабочую директорию /app внутри контейнера
# -----------------------------------------------------------------------------
WORKDIR /app

# -----------------------------------------------------------------------------
# 3) Копируем файл с зависимостями и устанавливаем их
# -----------------------------------------------------------------------------
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# -----------------------------------------------------------------------------
# 4) Копируем код бота и шаблон menu.json внутрь образа
#
#    - /app/bot.py           — основной скрипт бота
#    - /app/menu.json        — ваш исходный menu.json (будет шаблоном)
#    - (при необходимости копируйте сюда все остальные модули/файлы,
#       например, файлы с переводами или вспомогательные папки)
# -----------------------------------------------------------------------------
COPY bot.py             /app/bot.py
COPY menu.json          /app/_menu_template.json
# Если у вас есть другие файлы/пакеты, необходимые для работы бота, добавьте их тоже:
# COPY some_module.py   /app/some_module.py
# COPY utils/           /app/utils/

# -----------------------------------------------------------------------------
# 5) Объявляем /data как персистентный volume
#
#    Railway автоматически монтирует /data как долговременное хранилище,
#    но мы явно декларируем это в Dockerfile для ясности.
# -----------------------------------------------------------------------------
VOLUME /data

# -----------------------------------------------------------------------------
# 6) При старте контейнера:
#
#    1. Проверяем, существует ли /data/menu.json.
#       – Если нет, копируем туда шаблон из /app/_menu_template.json.
#    2. Запускаем бота (python /app/bot.py), который читает/пишет в /data/menu.json
# -----------------------------------------------------------------------------
ENTRYPOINT [ "sh", "-c", "\
    if [ ! -f /data/menu.json ]; then \
      cp /app/_menu_template.json /data/menu.json; \
    fi && \
    python /app/bot.py" ]
